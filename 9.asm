;.386
INOUT MACRO X,Y
	PUSH AX
	LEA DX,X
	MOV AH,Y
	INT 21H
	POP AX
	ENDM
	
STACKS SEGMENT PARA STACK USE16 'STACK'
	DB	512 DUP(0)
STACKS ENDS

DATAS SEGMENT PARA PUBLIC USE16 'DATA'
	COUNT = 28
	MLAB DB '7501264398CFAEBDGHIJKLMNOPQRST'
	JLAB DB '2347615098CEAFDBGHIJKLMNOPQRST'
	MCODE DB 28 DUP(' '),13,10,'$'
	JCODE DB 28 DUP(' '),13,10,'$'
	PASSWORD DB 28 DUP(' ')
	TIPS1 DB 13,10,'PASSWORD ERROR',13,10,'$'
	TIPS2 DB 13,10,'PASSWORD RIGHT',13,10,'$'
	MSG DB 'PLEASE INPUT PASSWORD,"!" IS EOJ',13,10,'$'
	MSG2 DB 'PLEASE LOGIN,"!" IS EOJ',13,10,'$'
	NUMBER DW 0
	CR_LF DB 13,10,'$'
DATAS ENDS

CODES SEGMENT PARA PUBLIC USE16 'CODE'
	  ASSUME CS:CODES,DS:DATAS,ES:DATAS
START PROC
	PUSH DS
	XOR AX,AX
	PUSH AX
	MOV AX,DATAS
	MOV DS,AX
	MOV ES,AX
	
	CALL MP
	INOUT CR_LF,9
	INOUT MCODE,9
		
	CALL JPP
	INOUT MSG2,9
	
	
	MOV CX,COUNT
	MOV SI,0
AGAIN:
	MOV AH,7
	INT 21H
	CMP AL,'!'
	JE QUIT
	
	MOV PASSWORD[SI],AL
	MOV DL,'*'
	MOV AH,2
	INT 21H
	INC SI
	LOOP AGAIN
QUIT:
	
	MOV AX,SI
	MOV SI,0
CHECK:	
	MOV BH,PASSWORD[SI]
	MOV BL,JCODE[SI]
	CMP BH,BL
	JNZ ERROR
	INC SI
	CMP SI,AX
	JB CHECK
	JMP RIGHT
ERROR:	
	INOUT TIPS1,9
	INOUT JCODE,9
	JMP L
RIGHT:
	INOUT TIPS2,9
	INOUT JCODE,9		
L:	
	MOV AH,4CH
	INT 21H
START ENDP
	
	
	
MP PROC 	;加密
		INOUT MSG,9
		MOV CX,COUNT
		MOV SI,0
 INPUT: MOV AH,7
 		INT 21H
 		PUSH AX
 		MOV DL,'*'
 		MOV AH,2
 		INT 21H
 		POP AX
 		CMP AL,'!'
 		JE EXIT
 		
 		SUB AL,30H
		CMP AL,9
		JBE L1
		SUB AL,7
	L1:
		LEA BX,MLAB
		XLATB
		MOV MCODE[SI],AL
		INC SI
		LOOP INPUT 		
 		
  EXIT: MOV NUMBER,SI
  		RET
MP ENDP


JPP PROC	;解密
		CLD
		MOV CX,NUMBER
		LEA SI,MCODE
		LEA DI,JCODE
		LEA BX,JLAB
	J:
		LODSB
 		SUB AL,30H
 		CMP AL,9
 		JBE L2
 		SUB AL,7
 	L2: XLATB
 		STOSB
 		LOOP J	
 		RET
JPP ENDP
CODES ENDS
	END START	

